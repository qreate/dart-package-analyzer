name: Docker image update

on:
  push:
    branches:
      - "master"
    paths:
      - ".github/**"
      - "app/**"
      - "Dockerfile-parent"
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TAG: v3
      DOCKERFILE: Dockerfile-parent
      IMAGE: axelop/dart_package_analyzer

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Get labels
        continue-on-error: true
        id: labels
        uses: axel-op/docker-labels-retriever@master
        with:
          image: ${{ env.IMAGE }}:${{ env.TAG }}
          registry: docker-hub

      - name: Check current image
        id: check
        env:
          EVENT: ${{ github.event_name }}
          IMAGE_DART: google/dart
          GIT_FLUTTER: git://github.com/flutter/flutter.git
          API_ADDRESS: https://registry-1.docker.io/v2
          PANA_DOC: https://pub.dev/api/documentation/pana
        run: |
          CURRENT_FLUTTER=$(git ls-remote $GIT_FLUTTER refs/heads/dev | cut -f 1)
          CURRENT_PANA=$(curl -s $PANA_DOC | jq -r '.latestStableVersion')
          API_TOKEN=$(curl -s "https://auth.docker.io/token?scope=repository:$IMAGE_DART:pull&service=registry.docker.io" | jq -r '.token')
          CURRENT_DART=$(curl -s -H "Authorization: Bearer $API_TOKEN" -H "Accept: application/vnd.docker.distribution.manifest.v2+json" "$API_ADDRESS/$IMAGE_DART/manifests/latest" | jq -r '.config.digest')
          PREVIOUS_FLUTTER=${{ steps.labels.outputs.fluttersha }}
          PREVIOUS_PANA=${{ steps.labels.outputs.panaversion }}
          PREVIOUS_DART=${{ steps.labels.outputs.dartdigest }}
          echo $CURRENT_FLUTTER is the latest commit in the stable branch of Flutter
          echo $PREVIOUS_FLUTTER is the commit of Flutter on Docker image
          echo $CURRENT_PANA is the latest stable version of pana
          echo $PREVIOUS_PANA is the version of pana on Docker image
          if [ "$EVENT" = push ] || [ "$CURRENT_FLUTTER" != "$PREVIOUS_FLUTTER" ] || [ "$CURRENT_PANA" != "$PREVIOUS_PANA" ]; then
            SHOULD_PUSH=true
          else
            SHOULD_PUSH=false
          fi
          echo "CURRENT_FLUTTER=$CURRENT_FLUTTER" >> $GITHUB_ENV
          echo "CURRENT_PANA=$CURRENT_PANA" >> $GITHUB_ENV
          echo "CURRENT_DART=$CURRENT_DART" >> $GITHUB_ENV
          echo "::set-output name=should_push::$SHOULD_PUSH"

      - name: Build new image
        if: steps.check.outputs.should_push == 'true'
        run: sudo docker build --label "fluttersha=$CURRENT_FLUTTER" --label "panaversion=$CURRENT_PANA" --label "dartdigest=$CURRENT_DART" -f $DOCKERFILE -t $IMAGE:$TAG .

      - name: Test new image
        if: steps.check.outputs.should_push == 'true'
        run: |
          sudo docker run -d -t --name test $IMAGE:$TAG
          sudo docker cp ${GITHUB_WORKSPACE}/test/. test:/test
          sudo docker cp $GITHUB_EVENT_PATH test:/eventpayload
          sudo docker exec -e GITHUB_WORKSPACE=/test -e GITHUB_EVENT_PATH=/eventpayload -e GITHUB_SHA=$GITHUB_SHA -e GITHUB_REPOSITORY=$GITHUB_REPOSITORY -e INPUT_MINANNOTATIONLEVEL=info -e INPUT_GITHUBTOKEN=${{ secrets.GITHUB_TOKEN }} test /bin/bash -c "/dart_package_analyzer"

      - name: Push new image
        if: steps.check.outputs.should_push == 'true'
        env:
          DOCKER_USERNAME: axelop
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          echo $DOCKER_TOKEN | sudo docker login --username=$DOCKER_USERNAME --password-stdin
          sudo docker push $IMAGE:$TAG
